{"ast":null,"code":"var _jsxFileName = \"/Users/kim-wonjun/Project/reat-emotion-study-group/src/components/product/ProductList.tsx\";\nimport React from 'react';\nimport Product from './Product';\nconst MAXROW = 4;\nconst MAXCOL = 2;\nexport class ProductList extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.renderRow = (items, idx) => {\n      return React.createElement(\"div\", {\n        key: idx,\n        className: \"pg-showcase__body__row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, items.map((item, index) => this.renderCol(item, index)));\n    };\n\n    this.renderCol = (items, idx) => {\n      return React.createElement(\"div\", {\n        key: idx,\n        className: \"pg-showcase__body__row__col\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, items.map((item, index) => React.createElement(Product, {\n        key: index,\n        item: item,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      })));\n    };\n\n    this.getCol = items => {\n      if (items) {\n        const newList = [];\n        const col = Math.floor(items.length / MAXCOL) + (items.length % MAXCOL !== 0 ? 1 : 0);\n\n        for (let i = 0; i < col; ++i) {\n          const clone = JSON.parse(JSON.stringify(items));\n          const start = i * MAXCOL;\n          const end = clone.length < (i + 1) * MAXCOL ? clone.length : (i + 1) * MAXCOL;\n          const list = clone.splice(start, end);\n          newList.push(list);\n        }\n\n        return newList;\n      }\n\n      return [];\n    };\n\n    this.getProductList = items => {\n      if (items) {\n        const newList = [];\n        const row = Math.floor(items.length / MAXROW) + (items.length % MAXROW !== 0 ? 1 : 0);\n\n        for (let i = 0; i < row; ++i) {\n          const clone = JSON.parse(JSON.stringify(items));\n          const start = i * MAXROW;\n          const end = clone.length < (i + 1) * MAXROW ? clone.length : (i + 1) * MAXROW;\n          const list = clone.splice(start, end);\n          newList.push(list);\n        }\n\n        return newList;\n      }\n\n      return [];\n    };\n  }\n\n  render() {\n    const {\n      items\n    } = this.props;\n    const list = this.getProductList(items);\n    return React.createElement(\"div\", {\n      className: \"pg-showcase__body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, list.map((item, index) => this.renderRow(item, index)));\n  }\n\n}","map":{"version":3,"sources":["/Users/kim-wonjun/Project/reat-emotion-study-group/src/components/product/ProductList.tsx"],"names":["React","Product","MAXROW","MAXCOL","ProductList","Component","renderRow","items","idx","map","item","index","renderCol","getCol","newList","col","Math","floor","length","i","clone","JSON","parse","stringify","start","end","list","splice","push","getProductList","row","render","props"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Product, { IProduct } from './Product';\n\nconst MAXROW = 4;\nconst MAXCOL = 2;\n\ninterface Props {\n    category: string;\n    items: IProduct[];\n}\n\nexport class ProductList extends React.Component<Props> {\n\n    public render() {\n        const { items } = this.props;\n        const list = this.getProductList(items);\n\n        return (\n            <div className=\"pg-showcase__body\">\n                {list.map((item, index) => this.renderRow(item, index))}\n            </div>\n        );\n    }\n\n    private renderRow = (items: IProduct[], idx: number) => {\n        return (\n            <div key={idx} className=\"pg-showcase__body__row\">\n                {items.map((item, index) => this.renderCol(item, index))}\n            </div>\n        );\n    }\n\n    private renderCol = (items: IProduct[], idx: number) => {\n        return (\n            <div key={idx} className=\"pg-showcase__body__row__col\">\n                {items.map((item, index) => <Product key={index} item={item} />)}\n            </div>\n        );\n    }\n\n    private getCol = (items: IProduct[]): IProduct[][] => {\n        if (items) {\n            const newList: IProduct[][] = [];\n            const col = Math.floor(items.length / MAXCOL) + (items.length % MAXCOL !== 0 ? 1 : 0);\n            for (let i = 0; i < col; ++i) {\n                const clone = (JSON.parse(JSON.stringify(items)));\n                const start = i * MAXCOL;\n                const end = clone.length < (i + 1) * MAXCOL ? clone.length : (i + 1) * MAXCOL;\n                const list = clone.splice(start, end);\n                newList.push(list);\n            }\n            return newList;\n        }\n\n        return [];\n    }\n\n    private getProductList = (items: IProduct[]): IProduct[][] => {\n        if (items) {\n            const newList: IProduct[][] = [];\n            const row = Math.floor(items.length / MAXROW) + (items.length % MAXROW !== 0 ? 1 : 0);\n            for (let i = 0; i < row; ++i) {\n                const clone = (JSON.parse(JSON.stringify(items)));\n                const start = i * MAXROW;\n                const end = clone.length < (i + 1) * MAXROW ? clone.length : (i + 1) * MAXROW;\n                const list = clone.splice(start, end);\n                newList.push(list);\n            }\n            return newList;\n        }\n\n        return [];\n    }\n}\n"]},"metadata":{},"sourceType":"module"}