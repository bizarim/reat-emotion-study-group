{"ast":null,"code":"var _jsxFileName = \"/Users/kim-wonjun/Project/reat-emotion-study-group/src/components/product/ProductList.tsx\";\nimport React from 'react';\nimport Product from './Product';\nexport class ProductList extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.renderRow = (items, idx) => {\n      return React.createElement(\"div\", {\n        key: idx,\n        className: \"pg-showcase__body__row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, items && items.map((item, index) => React.createElement(Product, {\n        key: index,\n        item: item,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      })));\n    };\n\n    this.getProductList = items => {\n      if (items) {\n        const newList = [];\n        const row = Math.floor(items.length / 4) + (items.length % 4 !== 0 ? 1 : 0);\n\n        for (let i = 0; i < row; ++i) {\n          const start = i * 4;\n          const end = items.length < (i + 1) * 4 ? items.length : (i + 1) * 4;\n          const list = items.splice(start, end);\n          newList.push(list);\n        }\n\n        return newList;\n      }\n\n      return [];\n    };\n  }\n\n  render() {\n    const {\n      items\n    } = this.props;\n    const list = this.getProductList(items);\n    console.log(list.length);\n    return React.createElement(\"div\", {\n      className: \"pg-showcase__body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, list.map((item, index) => this.renderRow(item, index)));\n  }\n\n}","map":{"version":3,"sources":["/Users/kim-wonjun/Project/reat-emotion-study-group/src/components/product/ProductList.tsx"],"names":["React","Product","ProductList","Component","renderRow","items","idx","map","item","index","getProductList","newList","row","Math","floor","length","i","start","end","list","splice","push","render","props","console","log"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAkC,WAAlC;AAOA,OAAO,MAAMC,WAAN,SAA0BF,KAAK,CAACG,SAAhC,CAAiD;AAAA;AAAA;;AAAA,SAa5CC,SAb4C,GAahC,CAACC,KAAD,EAAoBC,GAApB,KAAoC;AACpD,aACI;AAAK,QAAA,GAAG,EAAEA,GAAV;AAAe,QAAA,SAAS,EAAC,wBAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKD,KAAK,IAAIA,KAAK,CAACE,GAAN,CAAU,CAACC,IAAD,EAAOC,KAAP,KAAiB,oBAAC,OAAD;AAAS,QAAA,GAAG,EAAEA,KAAd;AAAqB,QAAA,IAAI,EAAED,IAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAA3B,CADd,CADJ;AAKH,KAnBmD;;AAAA,SAqB5CE,cArB4C,GAqB1BL,KAAD,IAAqC;AAC1D,UAAIA,KAAJ,EAAW;AACP,cAAMM,OAAqB,GAAG,EAA9B;AACA,cAAMC,GAAG,GAAGC,IAAI,CAACC,KAAL,CAAWT,KAAK,CAACU,MAAN,GAAe,CAA1B,KAAgCV,KAAK,CAACU,MAAN,GAAe,CAAf,KAAqB,CAArB,GAAyB,CAAzB,GAA6B,CAA7D,CAAZ;;AACA,aAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,GAApB,EAAyB,EAAEI,CAA3B,EAA8B;AAC1B,gBAAMC,KAAK,GAAGD,CAAC,GAAG,CAAlB;AACA,gBAAME,GAAG,GAAGb,KAAK,CAACU,MAAN,GAAe,CAACC,CAAC,GAAG,CAAL,IAAU,CAAzB,GAA6BX,KAAK,CAACU,MAAnC,GAA4C,CAACC,CAAC,GAAG,CAAL,IAAU,CAAlE;AACA,gBAAMG,IAAI,GAAGd,KAAK,CAACe,MAAN,CAAaH,KAAb,EAAoBC,GAApB,CAAb;AACAP,UAAAA,OAAO,CAACU,IAAR,CAAaF,IAAb;AACH;;AACD,eAAOR,OAAP;AACH;;AAED,aAAO,EAAP;AACH,KAnCmD;AAAA;;AAE7CW,EAAAA,MAAP,GAAgB;AACZ,UAAM;AAAEjB,MAAAA;AAAF,QAAY,KAAKkB,KAAvB;AACA,UAAMJ,IAAI,GAAG,KAAKT,cAAL,CAAoBL,KAApB,CAAb;AACAmB,IAAAA,OAAO,CAACC,GAAR,CAAYN,IAAI,CAACJ,MAAjB;AACA,WACI;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKI,IAAI,CAACZ,GAAL,CAAS,CAACC,IAAD,EAAOC,KAAP,KAAiB,KAAKL,SAAL,CAAeI,IAAf,EAAqBC,KAArB,CAA1B,CADL,CADJ;AAKH;;AAXmD","sourcesContent":["import React from 'react';\nimport Product, { IProduct } from './Product';\n\ninterface Props {\n    category: string;\n    items: IProduct[];\n}\n\nexport class ProductList extends React.Component<Props> {\n\n    public render() {\n        const { items } = this.props;\n        const list = this.getProductList(items);\n        console.log(list.length);\n        return (\n            <div className=\"pg-showcase__body\">\n                {list.map((item, index) => this.renderRow(item, index))}\n            </div>\n        );\n    }\n\n    private renderRow = (items: IProduct[], idx: number) => {\n        return (\n            <div key={idx} className=\"pg-showcase__body__row\">\n                {items && items.map((item, index) => <Product key={index} item={item} />)}\n            </div>\n        );\n    }\n\n    private getProductList = (items: IProduct[]): IProduct[][] => {\n        if (items) {\n            const newList: IProduct[][] = [];\n            const row = Math.floor(items.length / 4) + (items.length % 4 !== 0 ? 1 : 0);\n            for (let i = 0; i < row; ++i) {\n                const start = i * 4;\n                const end = items.length < (i + 1) * 4 ? items.length : (i + 1) * 4;\n                const list = items.splice(start, end);\n                newList.push(list);\n            }\n            return newList;\n        }\n\n        return [];\n    }\n}\n"]},"metadata":{},"sourceType":"module"}